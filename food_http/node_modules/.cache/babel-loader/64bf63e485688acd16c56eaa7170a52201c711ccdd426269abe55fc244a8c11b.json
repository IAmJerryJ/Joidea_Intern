{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97508\\\\OneDrive\\\\Documents\\\\GitHub\\\\Joidea_Intern\\\\food_http\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    // //判断传入的item是需要update的值还是要新加的值 => 不存在这个item，findIndex = -1，如果存在，>-1\n    // //来处理不存在item的情况\n    // //if不存在，处理添加的情况 => [..., newItem]\n    // //if结束，直接return\n    // //if存在, 找到state里的是哪个item，更新state里的item，return\n    // //items.map((item) => {\n    // //  if (index === findIndex) return {\n    // //    ...existingCartItem,\n    // //    amount: existingCartItem.amount + action.item.amount,\n    // //  }\n    // //    return item}\n    // //)\n    // //\n\n    const incomingId = action.item.id;\n    const totalAmount = state.totalAmount + action.item.price * action.item.amount;\n    if (state.items.findIndex(item => item.id === incomingId) === -1) {\n      return {\n        items: [...state.items, action.item],\n        totalAmount\n      };\n    }\n    const items = state.items.map(x => x.id === incomingId ? {\n      ...x,\n      amount: x.amount + action.item.amount\n    } : x);\n    return {\n      items,\n      totalAmount\n    };\n\n    // const updatedTotalAmount =\n    //   state.totalAmount + action.item.price * action.item.amount;\n\n    // const existingCartItemIndex = state.items.findIndex(\n    //   (item) => item.id === action.item.id\n    // );\n\n    // const existingCartItem = state.items[existingCartItemIndex];\n\n    // let updatedItems;\n\n    // if (existingCartItem) {\n    //   const updatedItem = {\n    //     ...existingCartItem,\n    //     amount: existingCartItem.amount + action.item.amount,\n    //   };\n    //   updatedItems = [...state.items];\n    //   updatedItems[existingCartItemIndex] = updatedItem;\n    // } else {\n    //   updatedItems = state.items.concat(action.item);\n    // }\n    // return {\n    //   items: updatedItems,\n    //   totalAmount: updatedTotalAmount,\n    // };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingItem = state.items[state.items.findIndex(item => item.id === action.id)];\n    const totalAmount = state.totalAmount - existingItem.price;\n    // let items;\n    // existingItem.amount === 1\n    //   ? (items = state.items.filter((item) => item.id !== action.id))\n    //   : (items = state.items.map((x) =>\n    //       x.id === existingItem.id ? { ...x, amount: x.amount - 1 } : x\n    //     ));\n    // return { items, totalAmount };\n    const items = state.items.reduce((previousItems, currentItem) => {\n      if (existingItem.id === currentItem.id) {\n        if (currentItem.amount === 1) {\n          currentItem = null;\n        }\n        currentItem.amount--;\n      }\n      previousItems.push(currentItem);\n      return previousItems;\n    }, []);\n    return {\n      items,\n      totalAmount\n    };\n\n    // const existingCartItemIndex = state.items.findIndex(\n    //   (item) => item.id === action.id\n    // );\n    // const existingItem = state.items[existingCartItemIndex];\n    // const updatedTotalAmount = state.totalAmount - existingItem.price;\n    // let updatedItems;\n    // if (existingItem.amount === 1) {\n    //   updatedItems = state.items.filter((item) => item.id !== action.id);\n    // } else {\n    //   const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n    //   updatedItems = [...state.items];\n    //   updatedItems[existingCartItemIndex] = updatedItem;\n    // }\n    // return {\n    //   items: updatedItems,\n    //   totalAmount: updatedTotalAmount,\n    // };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return defaultCartState;\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const clearCartHandler = () => {\n    dispatchCartAction({\n      type: \"CLEAR\"\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","incomingId","item","id","price","amount","findIndex","map","x","existingItem","reduce","previousItems","currentItem","push","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","children"],"sources":["C:/Users/97508/OneDrive/Documents/GitHub/Joidea_Intern/food_http/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    // //判断传入的item是需要update的值还是要新加的值 => 不存在这个item，findIndex = -1，如果存在，>-1\r\n    // //来处理不存在item的情况\r\n    // //if不存在，处理添加的情况 => [..., newItem]\r\n    // //if结束，直接return\r\n    // //if存在, 找到state里的是哪个item，更新state里的item，return\r\n    // //items.map((item) => {\r\n    // //  if (index === findIndex) return {\r\n    // //    ...existingCartItem,\r\n    // //    amount: existingCartItem.amount + action.item.amount,\r\n    // //  }\r\n    // //    return item}\r\n    // //)\r\n    // //\r\n\r\n    const incomingId = action.item.id;\r\n    const totalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    if (state.items.findIndex((item) => item.id === incomingId) === -1) {\r\n      return { items: [...state.items, action.item], totalAmount };\r\n    }\r\n    const items = state.items.map((x) =>\r\n      x.id === incomingId ? { ...x, amount: x.amount + action.item.amount } : x\r\n    );\r\n\r\n    return { items, totalAmount };\r\n\r\n    // const updatedTotalAmount =\r\n    //   state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    // const existingCartItemIndex = state.items.findIndex(\r\n    //   (item) => item.id === action.item.id\r\n    // );\r\n\r\n    // const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n    // let updatedItems;\r\n\r\n    // if (existingCartItem) {\r\n    //   const updatedItem = {\r\n    //     ...existingCartItem,\r\n    //     amount: existingCartItem.amount + action.item.amount,\r\n    //   };\r\n    //   updatedItems = [...state.items];\r\n    //   updatedItems[existingCartItemIndex] = updatedItem;\r\n    // } else {\r\n    //   updatedItems = state.items.concat(action.item);\r\n    // }\r\n    // return {\r\n    //   items: updatedItems,\r\n    //   totalAmount: updatedTotalAmount,\r\n    // };\r\n  }\r\n  if (action.type === \"REMOVE\") {\r\n    const existingItem =\r\n      state.items[state.items.findIndex((item) => item.id === action.id)];\r\n    const totalAmount = state.totalAmount - existingItem.price;\r\n    // let items;\r\n    // existingItem.amount === 1\r\n    //   ? (items = state.items.filter((item) => item.id !== action.id))\r\n    //   : (items = state.items.map((x) =>\r\n    //       x.id === existingItem.id ? { ...x, amount: x.amount - 1 } : x\r\n    //     ));\r\n    // return { items, totalAmount };\r\n    const items = state.items.reduce((previousItems, currentItem) => {\r\n      if (existingItem.id === currentItem.id) {\r\n        if (currentItem.amount === 1) {\r\n          currentItem = null;\r\n        }\r\n        currentItem.amount--;\r\n      }\r\n      previousItems.push(currentItem);\r\n      return previousItems;\r\n    }, []);\r\n\r\n    return { items, totalAmount };\r\n\r\n    // const existingCartItemIndex = state.items.findIndex(\r\n    //   (item) => item.id === action.id\r\n    // );\r\n    // const existingItem = state.items[existingCartItemIndex];\r\n    // const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    // let updatedItems;\r\n    // if (existingItem.amount === 1) {\r\n    //   updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    // } else {\r\n    //   const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n    //   updatedItems = [...state.items];\r\n    //   updatedItems[existingCartItemIndex] = updatedItem;\r\n    // }\r\n    // return {\r\n    //   items: updatedItems,\r\n    //   totalAmount: updatedTotalAmount,\r\n    // };\r\n  }\r\n\r\n  if (action.type === \"CLEAR\") {\r\n    return defaultCartState;\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({ type: \"CLEAR\" });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}