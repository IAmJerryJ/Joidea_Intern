{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97508\\\\OneDrive\\\\Documents\\\\GitHub\\\\Joidea_Intern\\\\authentication\\\\frontend\\\\src\\\\components\\\\EventForm.js\",\n  _s = $RefreshSig$();\nimport { Form, useNavigate, useNavigation, useActionData, json, redirect } from \"react-router-dom\";\nimport { getAuthToken } from \"../util/auth\";\nimport classes from \"./EventForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm(_ref) {\n  _s();\n  let {\n    method,\n    event\n  } = _ref;\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    children: [data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: err\n      }, err, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: event ? event.title : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true,\n        defaultValue: event ? event.image : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        defaultValue: event ? event.date : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: event ? event.description : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        disabled: isSubmitting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        children: isSubmitting ? \"Submitting...\" : \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"4RpZWvb1/vq18jUIhqcDrPiPElE=\", false, function () {\n  return [useActionData, useNavigate, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  const method = request.method;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  let url = \"http://localhost:8080/events\";\n  if (method === \"PATCH\") {\n    const eventId = params.eventId;\n    url = \"http://localhost:8080/events/\" + eventId;\n  }\n  const token = getAuthToken();\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","useNavigate","useNavigation","useActionData","json","redirect","getAuthToken","classes","EventForm","method","event","data","navigate","navigation","isSubmitting","state","cancelHandler","form","errors","Object","values","map","err","title","image","date","description","actions","action","request","params","formData","eventData","get","url","eventId","token","response","fetch","headers","Authorization","body","JSON","stringify","status","ok","message"],"sources":["C:/Users/97508/OneDrive/Documents/GitHub/Joidea_Intern/authentication/frontend/src/components/EventForm.js"],"sourcesContent":["import {\r\n  Form,\r\n  useNavigate,\r\n  useNavigation,\r\n  useActionData,\r\n  json,\r\n  redirect,\r\n} from \"react-router-dom\";\r\nimport { getAuthToken } from \"../util/auth\";\r\n\r\nimport classes from \"./EventForm.module.css\";\r\n\r\nfunction EventForm({ method, event }) {\r\n  const data = useActionData();\r\n  const navigate = useNavigate();\r\n  const navigation = useNavigation();\r\n\r\n  const isSubmitting = navigation.state === \"submitting\";\r\n\r\n  function cancelHandler() {\r\n    navigate(\"..\");\r\n  }\r\n\r\n  return (\r\n    <Form method={method} className={classes.form}>\r\n      {data && data.errors && (\r\n        <ul>\r\n          {Object.values(data.errors).map((err) => (\r\n            <li key={err}>{err}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <p>\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          required\r\n          defaultValue={event ? event.title : \"\"}\r\n        />\r\n      </p>\r\n      <p>\r\n        <label htmlFor=\"image\">Image</label>\r\n        <input\r\n          id=\"image\"\r\n          type=\"url\"\r\n          name=\"image\"\r\n          required\r\n          defaultValue={event ? event.image : \"\"}\r\n        />\r\n      </p>\r\n      <p>\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input\r\n          id=\"date\"\r\n          type=\"date\"\r\n          name=\"date\"\r\n          required\r\n          defaultValue={event ? event.date : \"\"}\r\n        />\r\n      </p>\r\n      <p>\r\n        <label htmlFor=\"description\">Description</label>\r\n        <textarea\r\n          id=\"description\"\r\n          name=\"description\"\r\n          rows=\"5\"\r\n          required\r\n          defaultValue={event ? event.description : \"\"}\r\n        />\r\n      </p>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\r\n          Cancel\r\n        </button>\r\n        <button disabled={isSubmitting}>\r\n          {isSubmitting ? \"Submitting...\" : \"Save\"}\r\n        </button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default EventForm;\r\n\r\nexport async function action({ request, params }) {\r\n  const method = request.method;\r\n  const data = await request.formData();\r\n\r\n  const eventData = {\r\n    title: data.get(\"title\"),\r\n    image: data.get(\"image\"),\r\n    date: data.get(\"date\"),\r\n    description: data.get(\"description\"),\r\n  };\r\n\r\n  let url = \"http://localhost:8080/events\";\r\n\r\n  if (method === \"PATCH\") {\r\n    const eventId = params.eventId;\r\n    url = \"http://localhost:8080/events/\" + eventId;\r\n  }\r\n\r\n  const token = getAuthToken();\r\n  const response = await fetch(url, {\r\n    method: method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify(eventData),\r\n  });\r\n\r\n  if (response.status === 422) {\r\n    return response;\r\n  }\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not save event.\" }, { status: 500 });\r\n  }\r\n\r\n  return redirect(\"/events\");\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}