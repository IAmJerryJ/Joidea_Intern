{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97508\\\\OneDrive\\\\Documents\\\\GitHub\\\\Joidea_Intern\\\\authentication\\\\frontend\\\\src\\\\App.js\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport ErrorPage from \"./pages/Error\";\nimport EventDetailPage, { loader as eventDetailLoader, action as deleteEventAction } from \"./pages/EventDetail\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport HomePage from \"./pages/Home\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport RootLayout from \"./pages/Root\";\nimport { action as manipulateEventAction } from \"./components/EventForm\";\nimport NewsletterPage, { action as newsletterAction } from \"./pages/Newsletter\";\nimport AuthenticationPage, { action as authAction } from \"./pages/Authentication\";\nimport { action as logoutAction } from \"./pages/Logout\";\nimport { tokenLoader, checkTokenLoader } from \"./util/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  //首页\n  path: \"/\",\n  //基本外观\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 14\n  }, this),\n  id: \"root\",\n  //token是验证时，从后端传过来的\n  loader: tokenLoader,\n  //错误页面\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 19\n  }, this),\n  //子路由\n  children: [\n  //index：true，表示是当前路由下的首页，element就是路由导向的页面\n  {\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"events\",\n    //event的基本界面\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this),\n      //页面刚加载时，需要加载的数据函数\n      loader: eventsLoader\n    }, {\n      //路径标识符\n      path: \":eventId\",\n      id: \"event-detail\",\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 26\n        }, this),\n        //页面刚加载时，需要加载的action函数，一些操作，比如http请求等\n        action: deleteEventAction\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 26\n        }, this),\n        action: manipulateEventAction,\n        loader: checkTokenLoader\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 22\n      }, this),\n      action: manipulateEventAction,\n      loader: checkTokenLoader\n    }]\n  }, {\n    path: \"newsletter\",\n    element: /*#__PURE__*/_jsxDEV(NewsletterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 18\n    }, this),\n    action: newsletterAction\n  }, {\n    path: \"auth\",\n    element: /*#__PURE__*/_jsxDEV(AuthenticationPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 18\n    }, this),\n    action: authAction\n  }, {\n    path: \"logout\",\n    action: logoutAction\n  }]\n}]);\nfunction App() {\n  //使用router，传入上面配置好的路由参数\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EditEventPage","ErrorPage","EventDetailPage","loader","eventDetailLoader","action","deleteEventAction","EventsPage","eventsLoader","EventsRootLayout","HomePage","NewEventPage","RootLayout","manipulateEventAction","NewsletterPage","newsletterAction","AuthenticationPage","authAction","logoutAction","tokenLoader","checkTokenLoader","router","path","element","id","errorElement","children","index","App"],"sources":["C:/Users/97508/OneDrive/Documents/GitHub/Joidea_Intern/authentication/frontend/src/App.js"],"sourcesContent":["import { RouterProvider, createBrowserRouter } from \"react-router-dom\";\r\n\r\nimport EditEventPage from \"./pages/EditEvent\";\r\nimport ErrorPage from \"./pages/Error\";\r\nimport EventDetailPage, {\r\n  loader as eventDetailLoader,\r\n  action as deleteEventAction,\r\n} from \"./pages/EventDetail\";\r\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\r\nimport EventsRootLayout from \"./pages/EventsRoot\";\r\nimport HomePage from \"./pages/Home\";\r\nimport NewEventPage from \"./pages/NewEvent\";\r\nimport RootLayout from \"./pages/Root\";\r\nimport { action as manipulateEventAction } from \"./components/EventForm\";\r\nimport NewsletterPage, { action as newsletterAction } from \"./pages/Newsletter\";\r\nimport AuthenticationPage, {\r\n  action as authAction,\r\n} from \"./pages/Authentication\";\r\nimport { action as logoutAction } from \"./pages/Logout\";\r\nimport { tokenLoader, checkTokenLoader } from \"./util/auth\";\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    //首页\r\n    path: \"/\",\r\n    //基本外观\r\n    element: <RootLayout />,\r\n    id: \"root\",\r\n    //token是验证时，从后端传过来的\r\n    loader: tokenLoader,\r\n    //错误页面\r\n    errorElement: <ErrorPage />,\r\n    //子路由\r\n    children: [\r\n      //index：true，表示是当前路由下的首页，element就是路由导向的页面\r\n      { element: <HomePage /> },\r\n      {\r\n        path: \"events\",\r\n        //event的基本界面\r\n        element: <EventsRootLayout />,\r\n        children: [\r\n          {\r\n            index: true,\r\n            element: <EventsPage />,\r\n            //页面刚加载时，需要加载的数据函数\r\n            loader: eventsLoader,\r\n          },\r\n          {\r\n            //路径标识符\r\n            path: \":eventId\",\r\n            id: \"event-detail\",\r\n            loader: eventDetailLoader,\r\n            children: [\r\n              {\r\n                index: true,\r\n                element: <EventDetailPage />,\r\n                //页面刚加载时，需要加载的action函数，一些操作，比如http请求等\r\n                action: deleteEventAction,\r\n              },\r\n              {\r\n                path: \"edit\",\r\n                element: <EditEventPage />,\r\n                action: manipulateEventAction,\r\n                loader: checkTokenLoader,\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            path: \"new\",\r\n            element: <NewEventPage />,\r\n            action: manipulateEventAction,\r\n            loader: checkTokenLoader,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: \"newsletter\",\r\n        element: <NewsletterPage />,\r\n        action: newsletterAction,\r\n      },\r\n      {\r\n        path: \"auth\",\r\n        element: <AuthenticationPage />,\r\n        action: authAction,\r\n      },\r\n      {\r\n        path: \"logout\",\r\n        action: logoutAction,\r\n      },\r\n    ],\r\n  },\r\n]);\r\n\r\nfunction App() {\r\n  //使用router，传入上面配置好的路由参数\r\n  return <RouterProvider router={router} />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}