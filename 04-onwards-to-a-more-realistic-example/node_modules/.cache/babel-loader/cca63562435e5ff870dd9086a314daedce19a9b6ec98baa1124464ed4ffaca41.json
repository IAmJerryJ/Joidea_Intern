{"ast":null,"code":"var _jsxFileName = \"G:\\\\Joidea\\\\Joidea_Intern\\\\04-onwards-to-a-more-realistic-example\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n  _s = $RefreshSig$();\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n  const createTask = taskTexttaskData => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: \"https://react-http-6b4a6.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        text: taskText\n      }\n    }, createTask);\n  };\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTask, \"e+CZgtYWzn/WEePX8yQWKpC3/rg=\", false, function () {\n  return [useHttp];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createTask","taskTexttaskData","generatedId","taskData","name","createdTask","id","text","taskText","onAddTask","enterTaskHandler","url","method","headers","body"],"sources":["G:/Joidea/Joidea_Intern/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"sourcesContent":["import Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const createTask = (taskTexttaskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest(\n      {\n        url: \"https://react-http-6b4a6.firebaseio.com/tasks.json\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: { text: taskText },\n      },\n      createTask\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAAC;AAE3C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,WAAW,EAAEC;EAAgB,CAAC,GAAGN,OAAO,EAAE;EAEpE,MAAMO,UAAU,GAAIC,gBAAgB,IAAK;IACvC,MAAMC,WAAW,GAAGC,QAAQ,CAACC,IAAI,CAAC,CAAC;IACnC,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEJ,WAAW;MAAEK,IAAI,EAAEC;IAAS,CAAC;IAEvDb,KAAK,CAACc,SAAS,CAACJ,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMK,gBAAgB,GAAG,MAAOF,QAAQ,IAAK;IAC3CT,eAAe,CACb;MACEY,GAAG,EAAE,oDAAoD;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAE;QAAEP,IAAI,EAAEC;MAAS;IACzB,CAAC,EACDR,UAAU,CACX;EACH,CAAC;EAED,oBACE,QAAC,OAAO;IAAA,wBACN,QAAC,QAAQ;MAAC,WAAW,EAAEU,gBAAiB;MAAC,OAAO,EAAEd;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9DC,KAAK,iBAAI;MAAA,UAAIA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEd,CAAC;AAAC,GA9BIH,OAAO;EAAA,QACgDD,OAAO;AAAA;AAAA,KAD9DC,OAAO;AAgCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}