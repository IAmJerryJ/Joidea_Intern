{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Is sending cart data...\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://reduxcart-dbb74-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n    try {} catch (error) {}\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","title","price","quantity","totalPrice","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["G:/Joidea/Joidea_Intern/redux_2/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0\r\n    },\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    title: newItem.title,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                })\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + existingItem.price\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async(dispatch) => {\r\n         dispatch(\r\n           uiActions.showNotification({\r\n             status: \"pending\",\r\n             title: \"Sending...\",\r\n             message: \"Is sending cart data...\",\r\n           })\r\n        );\r\n        \r\n        const sendRequest = async() => {\r\n\r\n            const response = await fetch(\r\n              \"https://reduxcart-dbb74-default-rtdb.firebaseio.com/cart.json\",\r\n              {\r\n                method: \"PUT\",\r\n                body: JSON.stringify(cart),\r\n              }\r\n            );\r\n    \r\n            if (!response.ok) {\r\n              throw new Error(\"Sending cart data failed!\");\r\n           }\r\n        }\r\n\r\n        \r\n        try {\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport const cartActions = cartSlice.actions; \r\n    \r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACNC,aAAa,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrEP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAI,CAACO,YAAY,EAAE;QACfJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACbD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEV,OAAO,CAACQ,KAAK;UACzBhB,IAAI,EAAEQ,OAAO,CAACO;QAClB,CAAC,CAAC;MACN,CAAC,MAAM;QACHL,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACM,KAAK;MAC1E;IACJ,CAAC;IACDG,kBAAkB,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAIO,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC7BX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACHH,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACM,KAAK;MAC1E;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMK,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAMC,QAAQ,IAAK;IACrBA,QAAQ,CACNzB,SAAS,CAAC0B,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBV,KAAK,EAAE,YAAY;MACnBW,OAAO,EAAE;IACX,CAAC,CAAC,CACJ;IAED,MAAMC,WAAW,GAAG,YAAW;MAE3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DAA+D,EAC/D;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;MAC3B,CAAC,CACF;MAED,IAAI,CAACM,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC/C;IACH,CAAC;IAGD,IAAI,CAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE,CAEhB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGtC,SAAS,CAACuC,OAAO;AAE5C,eAAevC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}