{"ast":null,"code":"var _jsxFileName = \"G:\\\\Joidea\\\\Joidea_Intern\\\\12-adv-starting-project\\\\frontend\\\\src\\\\Pages\\\\NewEventPage.js\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('desciption')\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"S\"\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","NewEventPage","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message"],"sources":["G:/Joidea/Joidea_Intern/12-adv-starting-project/frontend/src/Pages/NewEventPage.js"],"sourcesContent":["import { json } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nfunction NewEventPage() {\r\n    return (\r\n        <EventForm />\r\n    )\r\n}\r\n\r\nexport default NewEventPage;\r\n\r\nexport async function action({ request, params }) {\r\n    const data = await request.formData();\r\n    const eventData = {\r\n        title: data.get('title'),\r\n        image: data.get('image'),\r\n        date: data.get('date'),\r\n        description: data.get('desciption')\r\n    }\r\n    const response = await fetch(\"http://localhost:8080/events\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        },\r\n      body: JSON.stringify(eventData)\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw json({message: \"S\"})\r\n    }\r\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,SAASC,YAAY,GAAG;EACpB,oBACI,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA,QAAG;AAErB;AAAC,KAJQA,YAAY;AAMrB,eAAeA,YAAY;AAE3B,OAAO,eAAeC,MAAM,OAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC5C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EACrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,YAAY;EACtC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAChB,CAAC;IACHC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IACd,MAAMrB,IAAI,CAAC;MAACsB,OAAO,EAAE;IAAG,CAAC,CAAC;EAC9B;AACJ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}