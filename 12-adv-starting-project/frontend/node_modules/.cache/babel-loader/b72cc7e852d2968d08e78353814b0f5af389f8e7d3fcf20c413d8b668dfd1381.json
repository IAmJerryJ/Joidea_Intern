{"ast":null,"code":"var _jsxFileName = \"G:\\\\Joidea\\\\Joidea_Intern\\\\12-adv-starting-project\\\\frontend\\\\src\\\\Pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event Detail Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: params.eventId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", true);\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    param\n  } = _ref;\n  const id = param.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    return json({\n      message: \"Could not fetch the selected event details\"\n    }, {\n      status: 500\n    });\n  }\n  return response;\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useLoaderData","EventDetailPage","params","useParams","eventId","loader","param","id","response","fetch","ok","message","status"],"sources":["G:/Joidea/Joidea_Intern/12-adv-starting-project/frontend/src/Pages/EventDetailPage.js"],"sourcesContent":["import { json, useLoaderData } from \"react-router-dom\";\r\n\r\nfunction EventDetailPage() {\r\n  const params = useParams();\r\n  return (\r\n    <>\r\n      <h1>Event Detail Page</h1>\r\n      <p>{params.eventId}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ param}) {\r\n  const id = param.eventId;\r\n\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    return json({ message: \"Could not fetch the selected event details\" }, {\r\n      status: 500\r\n    })\r\n  }\r\n\r\n  return response;\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC;AAAA;AAEvD,SAASC,eAAe,GAAG;EAAA;EACzB,MAAMC,MAAM,GAAGC,SAAS,EAAE;EAC1B,oBACE;IAAA,wBACE;MAAA,UAAI;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1B;MAAA,UAAID,MAAM,CAACE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA,gBACtB;AAEP;AAAC,GARQH,eAAe;AAAA,KAAfA,eAAe;AAUxB,eAAeA,eAAe;AAE9B,OAAO,eAAeI,MAAM,OAAW;EAAA,IAAV;IAAEC;EAAK,CAAC;EACnC,MAAMC,EAAE,GAAGD,KAAK,CAACF,OAAO;EAExB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOX,IAAI,CAAC;MAAEY,OAAO,EAAE;IAA6C,CAAC,EAAE;MACrEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EAEA,OAAOJ,QAAQ;AACjB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}