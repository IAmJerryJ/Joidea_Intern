{"ast":null,"code":"var _jsxFileName = \"G:\\\\Joidea\\\\Joidea_Intern\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./Pages/Root\";\nimport HomePage from \"./Pages/HomePage\";\nimport EventsPage from \"./Pages/Events\";\nimport EventDetailPage from \"./Pages/EventDetailPage\";\nimport NewEventPage from \"./Pages/NewEventPage\";\nimport EditEventPage from \"./Pages/EditEventPage\";\nimport EventsRootLayout from \"./Pages/EventRoot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this),\n      loader: async () => {}\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: \":eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: \":eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 45\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","RootLayout","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","EventsRootLayout","router","path","element","children","index","loader","App"],"sources":["G:/Joidea/Joidea_Intern/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\n\nimport RootLayout from \"./Pages/Root\";\nimport HomePage from \"./Pages/HomePage\";\nimport EventsPage, { } from \"./Pages/Events\";\nimport EventDetailPage from \"./Pages/EventDetailPage\";\nimport NewEventPage from \"./Pages/NewEventPage\";\nimport EditEventPage from \"./Pages/EditEventPage\";\nimport EventsRootLayout from \"./Pages/EventRoot\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: \"events\",\n        element: <EventsRootLayout />,\n        children: [\n          {\n            index: true,\n            element: <EventsPage />,\n            loader: async () => {\n              \n            },\n          },\n          { path: \"new\", element: <NewEventPage /> },\n          { path: \":eventId\", element: <EventDetailPage /> },\n          { path: \":eventId/edit\", element: <EditEventPage /> },\n        ],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AAEtE,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAW,gBAAgB;AAC5C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,gBAAgB,MAAM,mBAAmB;AAAC;AAEjD,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CACjC;EACEU,IAAI,EAAE,GAAG;EACTC,OAAO,eAAE,QAAC,UAAU;IAAA;IAAA;IAAA;EAAA,QAAG;EACvBC,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEF,OAAO,eAAE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EACtC;IACED,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAE,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAG;IAC7BC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXF,OAAO,eAAE,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG;MACvBG,MAAM,EAAE,YAAY,CAEpB;IACF,CAAC,EACD;MAAEJ,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAE,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EAC1C;MAAED,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAE,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EAClD;MAAED,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAE,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC;EAEzD,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASI,GAAG,GAAG;EACb,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEN;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAFQM,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}