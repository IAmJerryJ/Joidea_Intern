{"ast":null,"code":"var _jsxFileName = \"G:\\\\Joidea\\\\Joidea_Intern\\\\react-ts-2\\\\src\\\\components\\\\NewToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewToDo = props => {\n  _s();\n\n  const inputRef = useRef(null);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredText = inputRef.current.value;\n\n    if (enteredText.trim().length === 0) {\n      return;\n    }\n\n    props.AddToDo(enteredText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"ToDo Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewToDo, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = NewToDo;\nexport default NewToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewToDo\");","map":{"version":3,"names":["useRef","NewToDo","props","inputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","AddToDo"],"sources":["G:/Joidea/Joidea_Intern/react-ts-2/src/components/NewToDo.tsx"],"sourcesContent":["import { useRef } from \"react\";\r\nimport classes from \"./NewToDo.module.css\";\r\n\r\nconst NewToDo: React.FC<{ AddToDo: (text: string) => void }> = (props) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const submitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const enteredText = inputRef.current!.value;\r\n\r\n    if (enteredText.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    props.AddToDo(enteredText);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <label htmlFor=\"text\">ToDo Text</label>\r\n      <input type=\"text\" id=\"text\" ref={inputRef} />\r\n      <button>Add to do</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewToDo;\r\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;;;AAGA,MAAMC,OAAsD,GAAIC,KAAD,IAAW;EAAA;;EACxE,MAAMC,QAAQ,GAAGH,MAAM,CAAmB,IAAnB,CAAvB;;EAEA,MAAMI,aAAa,GAAIC,KAAD,IAA4B;IAChDA,KAAK,CAACC,cAAN;IAEA,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,OAAT,CAAkBC,KAAtC;;IAEA,IAAIF,WAAW,CAACG,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;MACnC;IACD;;IAEDT,KAAK,CAACU,OAAN,CAAcL,WAAd;EACD,CAVD;;EAYA,oBACE;IAAM,QAAQ,EAAEH,aAAhB;IAAA,wBACE;MAAO,OAAO,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,EAAE,EAAC,MAAtB;MAA6B,GAAG,EAAED;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAtBD;;GAAMF,O;;KAAAA,O;AAwBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}